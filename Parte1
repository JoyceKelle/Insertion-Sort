da importação aleatória randint
importar timeit

import matplotlib as mpl
mpl.use ( ' Agg ' )
import matplotlib.pyplot como plt

def  geraLista ( tam , caso ): # 1 - melhor / 2 - medio / 3 - pior
	lista = []
	if (caso ==  " melhor " ):
		para eu na  faixa ( 0 , tam):
			lista.append (i)
	elif (caso ==  " medio " ):
		enquanto  len (lista) < tam:
			n = randint ( 1 , 1 * tam)
			se n não está  na lista: lista.append (n)
	elif (caso ==  " pior " ):
		para eu na  faixa (tam - 1 , - 1 , - 1 ):
			lista.append (i)
	return lista

def  insertion sort ( serie ):
	para eu na  faixa ( 1 , len (série)):
		valor = serie [i]
		indice = i

		enquanto indice > 0  e serie [indice - 1 ] > valor:
			serie [indice] = serie [indice - 1 ]
			indice = indice - 1

		serie [indice] = valor

	retornar serie

def  geraGraf ( x , lab , y , xl , yl , filew ):
	núcleos = [ ' azul ' , ' verde ' , ' vermelho ' , ' roxo ' , ' preto ' ]
	fig = plt.figure ( figsize = ( 10 , 10 ))
	ax = fig.add_subplot ( 111 )
	para i no  intervalo ( 0 , len (lab)):
		ax.plot (x, y [i], label = lab [i], markerfacecolor = núcleos [i], markersize = 12 )
	ax.legend ( bbox_to_anchor = ( 1 , 1 ), bbox_transform = plt.gcf (). transFigura)
	plt.ylabel (yl)
	plt.xlabel (xl)
	fig.savefig (filew)

series = [ 1000 , 2000 , 3000 , 4000 , 6000 ]
casos = [ " melhor " , " medio " , " pior " ]
tempos = []
para tam em série:
	t = []
	para c em casos:
		t.append (timeit.timeit ( " insertion sort ( {} ) " .format (geraLista (TAM, c)), de configuração = " a partir __main__ insertion sort importação " , número = 1 ))
	tempos.append (t)
	# print (tempos)

geraGraf (letras, séries, tempos, " Casos " , " Tempo " , " tempos.png " )

print ( " Finish " )
